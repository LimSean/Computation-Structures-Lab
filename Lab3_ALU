.include "C:\Users\Sean Lim\Desktop\50.002 Computation Structure\50002\nominal.jsim"
.include "C:\Users\Sean Lim\Desktop\50.002 Computation Structure\50002\stdcell.jsim"
.include "C:\Users\Sean Lim\Desktop\50.002 Computation Structure\50002\lab3checkoff_10.jsim"

*<====>FULL ADDER<=====>*
.subckt FA a b ci s co

Xxor1 a b p1 xor2
Xxor2 p1 ci s xor2

Xnand1 a b p2 nand2
Xnand2 p1 ci p3 nand2
Xnand3 p2 p3 co nand2
.ends


*<==================>Part A<=======================>*

.subckt overflowcheck a b s v 
Xsinv s si inverter
XAinv a ai inverter
XBinv b bi inverter

X1 a b si x1 and3
X2 ai bi s x2 and3
X3 x1 x2 v or2
.ends 


.subckt adder32 ALUFN[0] A[31:0] B[31:0] s[31:0] z v n

Xxor B[31:0] ALUFN[0]#32 nB[31:0] xor2

XAdder0 A[0] nB[0] ALUFN[0] s[0] co[0] FA
XAdder1to31 A[31:1] nB[31:1] co[30:0] s[31:1] co[31:1] FA

Xz1 s[0:7] s[8:15] s[16:23] s[24:31] z1[0:7] nor4
Xz2 z1[0:1] z1[2:3] z1[4:5] z1[6:7] z2[0:1] and4
Xz3 z2[0] z2[1] z and2


Xv A[31] nB[31] s[31] v overflowcheck

.connect s[31] n
.ends


*<==================>Part B<=====================>
.subckt compare32 ALUFN[2:1] z v n cmp[31:0]
XAltB n v LSB1 xor2
XAlteqB LSB1 z LSB2 or2
.connect cmp[31:1] 0
.connect d0 0
Xcmp32 ALUFN[1] ALUFN[2] d0 z LSB1 LSB2 cmp[0] mux4

.ends

*<==================>Part C<=====================>
.subckt boole32 ALUFN[3:0] A[31:0] B[31:0] boole[31:0]
Xmx4 A[31:0] B[31:0] ALUFN[0]#32 ALUFN[1]#32 ALUFN[2]#32 ALUFN[3]#32 boole[31:0] mux4

.ends


*<==================>Part D<=====================>
.subckt shift32 ALUFN[1:0] A[31:0] B[4:0] shift[31:0]

.connect gnd 0
XASRcombine A[31] ALUFN[1] Arith2 nand2
XASRcombineinv Arith2 Arith inverter

*shift s0     s1     dL0    dL1           dR0    dR1            out   mux4

*XB4 ALUFN[0]#32 B[4]#32 A[31:0]  A[15:0] gnd#16 A[31:0] Arith#16 A[31:16] W[31:0] mux4
*XB3 ALUFN[0]#32 B[3]#32 W[31:0]  W[23:0] gnd#8  W[31:0] Arith#8  W[31:8]  X[31:0] mux4
*XB2 ALUFN[0]#32 B[2]#32 X[31:0]  X[27:0] gnd#4  X[31:0] Arith#4  X[31:4]  Y[31:0] mux4
*XB1 ALUFN[0]#32 B[1]#32 Y[31:0]  Y[29:0] gnd#2  Y[31:0] Arith#2  Y[31:2]  Z[31:0] mux4
*XB0 ALUFN[0]#32 B[0]#32 Z[31:0]  Z[30:0] gnd#1  Z[31:0] Arith#1  Z[31:1]  shift[31:0] mux4

XB4 B[4]#32 ALUFN[0]#32 A[31:0]  A[15:0] gnd#16 A[31:0] Arith#16 A[31:16] W[31:0] mux4
XB3 B[3]#32 ALUFN[0]#32 W[31:0]  W[23:0] gnd#8  W[31:0] Arith#8  W[31:8]  X[31:0] mux4
XB2 B[2]#32 ALUFN[0]#32 X[31:0]  X[27:0] gnd#4  X[31:0] Arith#4  X[31:4]  Y[31:0] mux4
XB1 B[1]#32 ALUFN[0]#32 Y[31:0]  Y[29:0] gnd#2  Y[31:0] Arith#2  Y[31:2]  Z[31:0] mux4
XB0 B[0]#32 ALUFN[0]#32 Z[31:0]  Z[30:0] gnd#1  Z[31:0] Arith#1  Z[31:1]  shift[31:0] mux4

*Shift Left
*Xid    s    d0     d1     output  mux2
*XSLB4 B[4]#32 A[31:0] A[15:0] gnd#16 W[31:0] mux2
*XSLB3 B[3]#32 W[31:0] W[23:0] gnd#8  X[31:0] mux2
*XSLB2 B[2]#32 X[31:0] X[27:0] gnd#4  Y[31:0] mux2
*XSLB1 B[1]#32 Y[31:0] Y[29:0] gnd#2  Z[31:0] mux2
*XSLB0 B[0]#32 Z[31:0] Z[30:0] gnd    L[31:0] mux2

*Shift Right
*XSRB4 B[4]#32 A[31:0] Arith#16 A[31:16] K[31:0] mux2
*XSRB3 B[3]#32 K[31:0] Arith#8  K[31:8]  Q[31:0] mux2
*XSRB2 B[2]#32 Q[31:0] Arith#4  Q[31:4]  J[31:0] mux2
*XSRB1 B[1]#32 J[31:0] Arith#2  J[31:2]  U[31:0] mux2
*XSRB0 B[0]#32 U[31:0] Arith#1  U[31:1]  R[31:0] mux2

*XRandL ALUFN[0]#32 L[31:0] R[31:0] shift[31:0] mux2

.ends



*<===================>Part E&F<======================>

.subckt alu ALUFN[5:0] A[31:0] B[31:0] alu[31:0] z v n
Xadd ALUFN[0] A[31:0] B[31:0] aalu[31:0] z v n  adder32
Xcompare ALUFN[2:1] z v n calu[31:0] compare32
Xboole ALUFN[3:0] A[31:0] B[31:0] balu[31:0] boole32 
Xshift ALUFN[1:0] A[31:0] B[4:0] salu[31:0] shift32
Xmultiply A[31:0] B[31:0] malu[31:0] mult

XMultAdd ALUFN[1]#32 aalu[31:0] malu[31:0] amalu[31:0] mux2
Xcombine ALUFN[4]#32 ALUFN[5]#32 amalu[31:0] balu[31:0] salu[31:0] calu[31:0] alu[31:0]  mux4
.ends



*<================>Multiplier<======================>
.subckt mult A[31:0] B[31:0] P[31:0]
XrA A[31:0] B[0]#32 rA[31:0] and2
XrB A[30:0] B[1]#31 rB[30:0] and2
XrC A[29:0] B[2]#30 rC[29:0] and2
XrD A[28:0] B[3]#29 rD[28:0] and2
XrE A[27:0] B[4]#28 rE[27:0] and2
XrF A[26:0] B[5]#27 rF[26:0] and2
XrG A[25:0] B[6]#26 rG[25:0] and2
XrH A[24:0] B[7]#25 rH[24:0] and2
XrI A[23:0] B[8]#24 rI[23:0] and2
XrJ A[22:0] B[9]#23 rJ[22:0] and2
XrK A[21:0] B[10]#22 rK[21:0] and2
XrL A[20:0] B[11]#21 rL[20:0] and2
XrM A[19:0] B[12]#20 rM[19:0] and2
XrN A[18:0] B[13]#19 rN[18:0] and2
XrO A[17:0] B[14]#18 rO[17:0] and2
XrP A[16:0] B[15]#17 rP[16:0] and2
XrQ A[15:0] B[16]#16 rQ[15:0] and2
XrR A[14:0] B[17]#15 rR[14:0] and2
XrS A[13:0] B[18]#14 rS[13:0] and2
XrT A[12:0] B[19]#13 rT[12:0] and2
XrU A[11:0] B[20]#12 rU[11:0] and2
XrV A[10:0] B[21]#11 rV[10:0] and2
XrW A[9:0] B[22]#10 rW[9:0] and2
XrX A[8:0] B[23]#9 rX[8:0] and2
XrY A[7:0] B[24]#8 rY[7:0] and2
XrZ A[6:0] B[25]#7 rZ[6:0] and2
XrAA A[5:0] B[26]#6 rAA[5:0] and2
XrAB A[4:0] B[27]#5 rAB[4:0] and2
XrAC A[3:0] B[28]#4 rAC[3:0] and2
XrAD A[2:0] B[29]#3 rAD[2:0] and2
XrAE A[1:0] B[30]#2 rAE[1:0] and2
XrAF A[0] B[31]#1 rAF[0] and2




XaddB  rA[1:31] rB[0:30] 0 coutB[0:29] sumB[0:30] coutB[0:30] FA
XaddC  rC[0:29] sumB[1:30] 0 coutC[0:28] sumC[0:29] coutC[0:29] FA
XaddD  rD[0:28] sumC[1:29] 0 coutD[0:27] sumD[0:28] coutD[0:28] FA
XaddE  rE[0:27] sumD[1:28] 0 coutE[0:26] sumE[0:27] coutE[0:27] FA
XaddF  rF[0:26] sumE[1:27] 0 coutF[0:25] sumF[0:26] coutF[0:26] FA
XaddG  rG[0:25] sumF[1:26] 0 coutG[0:24] sumG[0:25] coutG[0:25] FA
XaddH  rH[0:24] sumG[1:25] 0 coutH[0:23] sumH[0:24] coutH[0:24] FA
XaddI  rI[0:23] sumH[1:24] 0 coutI[0:22] sumI[0:23] coutI[0:23] FA
XaddJ  rJ[0:22] sumI[1:23] 0 coutJ[0:21] sumJ[0:22] coutJ[0:22] FA
XaddK  rK[0:21] sumJ[1:22] 0 coutK[0:20] sumK[0:21] coutK[0:21] FA
XaddL  rL[0:20] sumK[1:21] 0 coutL[0:19] sumL[0:20] coutL[0:20] FA
XaddM  rM[0:19] sumL[1:20] 0 coutM[0:18] sumM[0:19] coutM[0:19] FA
XaddN  rN[0:18] sumM[1:19] 0 coutN[0:17] sumN[0:18] coutN[0:18] FA
XaddO  rO[0:17] sumN[1:18] 0 coutO[0:16] sumO[0:17] coutO[0:17] FA
XaddP  rP[0:16] sumO[1:17] 0 coutP[0:15] sumP[0:16] coutP[0:16] FA
XaddQ  rQ[0:15] sumP[1:16] 0 coutQ[0:14] sumQ[0:15] coutQ[0:15] FA
XaddR  rR[0:14] sumQ[1:15] 0 coutR[0:13] sumR[0:14] coutR[0:14] FA
XaddS  rS[0:13] sumR[1:14] 0 coutS[0:12] sumS[0:13] coutS[0:13] FA
XaddT  rT[0:12] sumS[1:13] 0 coutT[0:11] sumT[0:12] coutT[0:12] FA
XaddU  rU[0:11] sumT[1:12] 0 coutU[0:10] sumU[0:11] coutU[0:11] FA
XaddV  rV[0:10] sumU[1:11] 0 coutV[0:9] sumV[0:10] coutV[0:10] FA
XaddW  rW[0:9] sumV[1:10] 0 coutW[0:8] sumW[0:9] coutW[0:9] FA
XaddX  rX[0:8] sumW[1:9] 0 coutX[0:7] sumX[0:8] coutX[0:8] FA
XaddY  rY[0:7] sumX[1:8] 0 coutY[0:6] sumY[0:7] coutY[0:7] FA
XaddZ  rZ[0:6] sumY[1:7] 0 coutZ[0:5] sumZ[0:6] coutZ[0:6] FA
XaddAA rAA[0:5] sumZ[1:6] 0 coutAA[0:4] sumAA[0:5] coutAA[0:5] FA
XaddAB rAB[0:4] sumAA[1:5] 0 coutAB[0:3] sumAB[0:4] coutAB[0:4] FA
XaddAC rAC[0:3] sumAB[1:4] 0 coutAC[0:2] sumAC[0:3] coutAC[0:3] FA
XaddAD rAD[0:2] sumAC[1:3] 0 coutAD[0:1] sumAD[0:2] coutAD[0:2] FA
XaddAE rAE[0:1] sumAD[1:2] 0 coutAE[0] sumAE[0:1] coutAE[0:1] FA
XaddAF rAF[0] sumAE[1] 0 sumAF[0] coutAF[0] FA

.connect rA[0] P[0] 
.connect sumB[0] P[1]
.connect sumC[0] P[2]
.connect sumD[0] P[3]
.connect sumE[0] P[4]
.connect sumF[0] P[5]
.connect sumG[0] P[6]
.connect sumH[0] P[7]
.connect sumI[0] P[8]
.connect sumJ[0] P[9]
.connect sumK[0] P[10]
.connect sumL[0] P[11]
.connect sumM[0] P[12]
.connect sumN[0] P[13]
.connect sumO[0] P[14]
.connect sumP[0] P[15]
.connect sumQ[0] P[16]
.connect sumR[0] P[17]
.connect sumS[0] P[18]
.connect sumT[0] P[19]
.connect sumU[0] P[20]
.connect sumV[0] P[21]
.connect sumW[0] P[22]
.connect sumX[0] P[23]
.connect sumY[0] P[24]
.connect sumZ[0] P[25]
.connect sumAA[0] P[26]
.connect sumAB[0] P[27]
.connect sumAC[0] P[28]
.connect sumAD[0] P[29]
.connect sumAE[0] P[30]
.connect sumAF[0] P[31]
.ends





